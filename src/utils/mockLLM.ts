// Mock LLM responses for demonstration
const MOCK_RESPONSES: Record<string, string> = {
  'summarize': 'This is a mock summary of the content. In a real implementation, this would be generated by an AI model. The content would be analyzed and condensed into key points while maintaining the original meaning and important details.',
  'analyze': 'Mock analysis: The provided content appears to be a placeholder. In a real scenario, this would contain detailed insights and analysis generated by an AI model based on the input data.',
  'default': 'This is a mock response. To see real AI-generated content, please provide your OpenAI API key in the .env file.'
};

export async function mockLLMRequest(prompt: string, systemPrompt?: string) {
  // Simulate API delay
  await new Promise(resolve => setTimeout(resolve, 1000));
  
  // Check for specific patterns in the prompt
  const lowerPrompt = prompt.toLowerCase();
  
  if (lowerPrompt.includes('summarize') || lowerPrompt.includes('summary')) {
    return MOCK_RESPONSES.summarize;
  } else if (lowerPrompt.includes('analyze') || lowerPrompt.includes('analysis')) {
    return MOCK_RESPONSES.analyze;
  }
  
  return MOCK_RESPONSES.default;
}

export function isMockMode() {
  return !import.meta.env.VITE_OPENAI_API_KEY;
}
